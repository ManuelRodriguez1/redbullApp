---

const { button, radius, link, animation = false, animationF = false } = Astro.props
const styleButton: any = {
    'gray': 'bg-[#000F1E0D]',
    'red': 'bg-[#DB0A40]'
}
const styleBorder: any = {
    'gray': 'border-[#000F1E0D]',
    'red': 'border-[#DB0A40]'
}
const colorText: any = {
    'gray': '[#000F1E]',
    'red': 'white'
}
const radiusStyle: any = {
    '3xl': '3xl',
    'full': 'full',
}
let widthHeight = radius == 'full' ? 'w-12 h-12' : 'py-3 px-6'

---
<a href=`/${ link }`
    class=`${ (animation)? 'slideBack': '' } ${ (animationF)? 'slideForward': '' } justify-center border-2 border-solid inline-flex items-center rounded-${ radiusStyle[ radius ] } text-sm font-normal font-bull ${ styleButton[ button ] } ${ styleBorder[ button ] } text-${ colorText[ button ]} ${ widthHeight }`>
    <slot />
</a>

<style>
    .slideBack{
        animation: slide .5s ease-in-out;
    }
    .slideForward{
        animation: slideForward .5s ease-in-out;
    }
    @keyframes slide {
        0% {
            /* opacity: 0; */
            transform: translateX(90px);
        }
        100%{
            transform: translateX(0px);
            /* opacity: 1; */
        }
    }
    @keyframes slideForward {
        0% {
            transform: translateX(-90px);
        }
        100%{
            transform: translateX(0px);
        }
    }

</style>